name: Build FFmpeg Multi-Platform

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [x86_64, i686, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config yasm nasm git curl \
            gcc g++ make \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-i686-linux-gnu g++-i686-linux-gnu zip

      - name: Build FFmpeg (${{ matrix.arch }})
        run: |
          git clone --depth 1 --branch n${GITHUB_REF#refs/tags/v} https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          case ${{ matrix.arch }} in
            x86_64)
              ./configure \
                --prefix=$PWD/../build \
                --arch=x86_64 --target-os=linux \
                --enable-static --disable-shared \
                --disable-doc --disable-debug
              ;;
            i686)
              ./configure \
                --prefix=$PWD/../build \
                --arch=i686 --target-os=linux \
                --cross-prefix=i686-linux-gnu- \
                --enable-static --disable-shared \
                --disable-doc --disable-debug
              ;;
            arm64)
              ./configure \
                --prefix=$PWD/../build \
                --arch=aarch64 --target-os=linux \
                --cross-prefix=aarch64-linux-gnu- \
                --enable-static --disable-shared \
                --disable-doc --disable-debug
              ;;
          esac
          make -j$(nproc)
          make install
          cd ..
          zip -r ffmpeg-linux-${{ matrix.arch }}.zip build/bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-linux-${{ matrix.arch }}
          path: ffmpeg-linux-${{ matrix.arch }}.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: brew install nasm pkg-config yasm zip

      - name: Build FFmpeg (macOS)
        run: |
          git clone --depth 1 --branch n${GITHUB_REF#refs/tags/v} https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          ./configure \
            --prefix=$PWD/../build \
            --arch=x86_64 \
            --target-os=darwin \
            --enable-static --disable-shared \
            --disable-doc --disable-debug \
            --disable-x86asm
          make -j$(sysctl -n hw.ncpu)
          make install
          cd ..
          zip -r ffmpeg-macos.zip build/bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-macos
          path: ffmpeg-macos.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git make pkg-config yasm nasm
            mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config

      - name: Build FFmpeg (Windows)
        shell: msys2 {0}
        run: |
          git clone --depth 1 --branch n${GITHUB_REF#refs/tags/v} https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          ./configure \
            --prefix=$PWD/../build \
            --target-os=mingw32 \
            --arch=x86_64 \
            --enable-static --disable-shared \
            --disable-doc --disable-debug
          make -j$(nproc)
          make install
          cd ..
          zip -r ffmpeg-windows.zip build/bin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-windows
          path: ffmpeg-windows.zip

  release:
    runs-on: ubuntu-22.04
    needs: [build-linux, build-macos, build-windows]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate checksums
        run: |
          cd artifacts
          find . -type f -exec sha256sum {} \; > SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.zip
            artifacts/SHA256SUMS.txt
